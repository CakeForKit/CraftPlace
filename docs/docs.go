// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth-user/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает токен доступа",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "аутентификация"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Учетные данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reqresp.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно аутентифицирован"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "401": {
                        "description": "Ошибка аутентификации"
                    }
                }
            }
        },
        "/auth-user/register": {
            "post": {
                "description": "Регистрирует нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "аутентификация"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reqresp.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь зарегистрирован"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "401": {
                        "description": "Ошибка аутентификации"
                    },
                    "409": {
                        "description": "Попытка повторной регистрации"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Возвращает список категорий с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить категории",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по названию категории",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reqresp.CategoryResponse"
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id_category}/products": {
            "get": {
                "description": "Возвращает список товаров указанной категории с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить товары категории",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID категории",
                        "name": "id_category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по названию товара",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100000,
                        "description": "Максимальная цена товара",
                        "name": "max_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Минимальная цена товара",
                        "name": "min_cost",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reqresp.ProductResponse"
                            }
                        }
                    }
                }
            }
        },
        "/shops": {
            "get": {
                "description": "Возвращает список магазинов с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить магазины",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по названию магазина",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reqresp.ShopResponse"
                            }
                        }
                    }
                }
            }
        },
        "/shops/{id_shop}/posts": {
            "get": {
                "description": "Возвращает список постов указанного магазина",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить посты магазина",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID магазина",
                        "name": "id_shop",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reqresp.PostResponse"
                            }
                        }
                    }
                }
            }
        },
        "/shops/{id_shop}/products": {
            "get": {
                "description": "Возвращает список товаров указанного магазина с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить товары магазина",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID магазина",
                        "name": "id_shop",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по названию товара",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100000,
                        "description": "Максимальная цена товара",
                        "name": "max_cost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Минимальная цена товара",
                        "name": "min_cost",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reqresp.ProductResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "reqresp.CategoryResponse": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Лучший магазин сережек"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "title": {
                    "type": "string",
                    "example": "Eco"
                }
            }
        },
        "reqresp.LoginUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "ulogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                }
            }
        },
        "reqresp.PostResponse": {
            "type": "object",
            "required": [
                "description",
                "shopID"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Лучший магазин сережек"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "shopID": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "timePublication": {
                    "type": "string",
                    "example": "2023-06-15T10:00:00Z"
                }
            }
        },
        "reqresp.ProductResponse": {
            "type": "object",
            "required": [
                "categoryIDs",
                "cost",
                "description",
                "shopID"
            ],
            "properties": {
                "categoryIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cost": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 200
                },
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Лучший магазин сережек"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "shopID": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "title": {
                    "type": "string",
                    "example": "Eco"
                }
            }
        },
        "reqresp.RegisterUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password",
                "username"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "ulogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "uname"
                }
            }
        },
        "reqresp.ShopResponse": {
            "type": "object",
            "required": [
                "description",
                "userID"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Лучший магазин сережек"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "title": {
                    "type": "string",
                    "example": "Eco"
                },
                "userID": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "CraftPlace",
	Description:      "API для платформы для мастеров ручной работы",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
