basePath: /api/v1
definitions:
  reqresp.AddPostRequest:
    properties:
      description:
        example: Магазин сережек
        maxLength: 255
        type: string
      shopID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
    required:
    - description
    - shopID
    type: object
  reqresp.AddProductRequest:
    properties:
      categoryIDs:
        items:
          type: string
        type: array
      cost:
        example: 100
        minimum: 0
        type: integer
      description:
        example: Магазин сережек
        maxLength: 255
        type: string
      shopID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Звезды
        maxLength: 255
        type: string
    required:
    - categoryIDs
    - cost
    - description
    - shopID
    - title
    type: object
  reqresp.AddShopRequest:
    properties:
      description:
        example: Магазин сережек
        maxLength: 255
        type: string
      title:
        example: Звезды
        maxLength: 255
        type: string
    required:
    - description
    - title
    type: object
  reqresp.CategoryResponse:
    properties:
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Eco
        type: string
    required:
    - description
    type: object
  reqresp.DeletePostRequest:
    properties:
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
    type: object
  reqresp.DeleteProductRequest:
    properties:
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
    type: object
  reqresp.DeleteShopRequest:
    properties:
      id_shop:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
    type: object
  reqresp.LoginUserRequest:
    properties:
      login:
        example: ulogin
        maxLength: 50
        minLength: 4
        type: string
      password:
        example: "12345678"
        minLength: 4
        type: string
    required:
    - login
    - password
    type: object
  reqresp.PostResponse:
    properties:
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      shopID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      timePublication:
        example: "2023-06-15T10:00:00Z"
        type: string
    required:
    - description
    - shopID
    type: object
  reqresp.ProductResponse:
    properties:
      categoryIDs:
        items:
          type: string
        type: array
      cost:
        example: 200
        minimum: 0
        type: integer
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      shopID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Eco
        type: string
    required:
    - categoryIDs
    - cost
    - description
    - shopID
    type: object
  reqresp.RegisterUserRequest:
    properties:
      login:
        example: ulogin
        maxLength: 50
        minLength: 4
        type: string
      password:
        example: "12345678"
        minLength: 4
        type: string
      username:
        example: uname
        maxLength: 50
        type: string
    required:
    - login
    - password
    - username
    type: object
  reqresp.ShopResponse:
    properties:
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id_shop:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Eco
        type: string
      userID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
    required:
    - description
    - userID
    type: object
  reqresp.UpdateLoginRequest:
    properties:
      login:
        example: uname
        maxLength: 50
        type: string
    required:
    - login
    type: object
  reqresp.UpdateProductRequest:
    properties:
      categoryIDs:
        items:
          type: string
        type: array
      cost:
        example: 200
        minimum: 0
        type: integer
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      shopID:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Лучшие звезды
        maxLength: 255
        type: string
    required:
    - categoryIDs
    - cost
    - description
    - shopID
    - title
    type: object
  reqresp.UpdateShopRequest:
    properties:
      description:
        example: Лучший магазин сережек
        maxLength: 255
        type: string
      id_shop:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Лучшие звезды
        maxLength: 255
        type: string
    required:
    - description
    - title
    type: object
  reqresp.UpdateUserPasswordRequest:
    properties:
      password:
        example: "12345678"
        minLength: 4
        type: string
    required:
    - password
    type: object
  reqresp.UserResponse:
    properties:
      login:
        example: uname
        maxLength: 50
        type: string
    required:
    - login
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для платформы для мастеров ручной работы
  title: CraftPlace
  version: "1.0"
paths:
  /auth-user/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает токен доступа
      parameters:
      - description: Учетные данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.LoginUserRequest'
      responses:
        "200":
          description: Пользователь успешно аутентифицирован
        "400":
          description: Неверные входные параметры
        "401":
          description: Ошибка аутентификации
      summary: Вход пользователя
      tags:
      - аутентификация
  /auth-user/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.RegisterUserRequest'
      responses:
        "200":
          description: Пользователь зарегистрирован
        "400":
          description: Неверные входные параметры
        "401":
          description: Ошибка аутентификации
        "409":
          description: Попытка повторной регистрации
      summary: Регистрация пользователя
      tags:
      - аутентификация
  /categories:
    get:
      consumes:
      - application/json
      description: Возвращает список категорий с возможностью фильтрации
      parameters:
      - description: Фильтр по названию категории
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/reqresp.CategoryResponse'
            type: array
      summary: Получить категории
      tags:
      - Поиск
  /categories/{id_category}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о категории по её идентификатору
      parameters:
      - description: ID категории
        format: uuid
        in: path
        name: id_category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о категории
          schema:
            $ref: '#/definitions/reqresp.CategoryResponse'
        "400":
          description: Неверный формат ID категории
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Категория не найдена
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить категорию по ID
      tags:
      - Поиск
  /posts:
    get:
      consumes:
      - application/json
      description: Возвращает список постов с возможностью фильтрации по магазину
      parameters:
      - description: Фильтр по ID магазина
        format: uuid
        in: query
        name: id_shop
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список постов
          schema:
            items:
              $ref: '#/definitions/reqresp.PostResponse'
            type: array
        "400":
          description: Неверный формат ID магазина
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить посты
      tags:
      - Поиск
  /products:
    get:
      consumes:
      - application/json
      description: Возвращает список товаров с возможностью фильтрации по различным
        параметрам
      parameters:
      - description: Фильтр по названию товара
        in: query
        name: title
        type: string
      - default: 0
        description: Минимальная цена товара
        in: query
        name: min_cost
        type: integer
      - default: 100000
        description: Максимальная цена товара
        in: query
        name: max_cost
        type: integer
      - default: 00000000-0000-0000-0000-000000000000
        description: Фильтр по ID магазина
        format: uuid
        in: query
        name: id_shop
        type: string
      - default: 00000000-0000-0000-0000-000000000000
        description: Фильтр по ID категории
        format: uuid
        in: query
        name: id_category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список товаров
          schema:
            items:
              $ref: '#/definitions/reqresp.ProductResponse'
            type: array
        "400":
          description: Неверный формат параметров
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить товары
      tags:
      - Поиск
  /shops:
    get:
      consumes:
      - application/json
      description: Возвращает список магазинов с возможностью фильтрации
      parameters:
      - description: Фильтр по названию магазина
        in: query
        name: title
        type: string
      - default: 00000000-0000-0000-0000-000000000000
        description: Фильтр по ID пользователя
        format: uuid
        in: query
        name: id_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/reqresp.ShopResponse'
            type: array
      summary: Получить магазины
      tags:
      - Поиск
  /shops/{id_shop}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о магазине по его идентификатору
      parameters:
      - description: ID магазина
        format: uuid
        in: path
        name: id_shop
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о магазине
          schema:
            $ref: '#/definitions/reqresp.ShopResponse'
        "400":
          description: Неверный формат ID магазина
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Магазин не найден
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить магазин по ID
      tags:
      - Поиск
  /user/{id_user}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о пользователе по его идентификатору
      parameters:
      - description: ID пользователя
        format: uuid
        in: path
        name: id_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о пользователе
          schema:
            $ref: '#/definitions/reqresp.UserResponse'
        "400":
          description: Неверный формат ID пользователя
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить пользователя по ID
      tags:
      - Пользователь
  /user/update-login:
    patch:
      consumes:
      - application/json
      description: Изменяет логин текущего авторизованного пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления логина
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.UpdateLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Обновить логин пользователя
      tags:
      - Пользователь
  /user/update-password:
    patch:
      consumes:
      - application/json
      description: Изменяет пароль текущего авторизованного пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления пароля
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.UpdateUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Обновить пароль пользователя
      tags:
      - Пользователь
  /user/user-posts:
    delete:
      consumes:
      - application/json
      description: Удаляет пост пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления поста
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.DeletePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пост успешно удален
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Удалить пост
      tags:
      - Посты
    post:
      consumes:
      - application/json
      description: Добавляет новый пост в указанный магазин пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные нового поста
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.AddPostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пост успешно добавлен
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Добавить пост в магазин
      tags:
      - Посты
  /user/user-products:
    delete:
      consumes:
      - application/json
      description: Удаляет товар пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления товара
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.DeleteProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Товар успешно удален
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Удалить товар
      tags:
      - Изделия
    post:
      consumes:
      - application/json
      description: Добавляет новый товар в указанный магазин пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные нового товара
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.AddProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Товар успешно добавлен
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Добавить товар в магазин
      tags:
      - Изделия
    put:
      consumes:
      - application/json
      description: Обновляет данные товара пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления товара
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Товар успешно обновлен
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Обновить товар
      tags:
      - Изделия
  /user/user-shops:
    delete:
      consumes:
      - application/json
      description: Удаляет магазин пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления магазина
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.DeleteShopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Магазин успешно удален
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Удалить магазин
      tags:
      - Магазины
    post:
      consumes:
      - application/json
      description: Создает новый магазин для текущего авторизованного пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные нового магазина
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.AddShopRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Магазин успешно создан
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Добавить магазин
      tags:
      - Магазины
    put:
      consumes:
      - application/json
      description: Обновляет данные указанного магазина пользователя
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления магазина
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/reqresp.UpdateShopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Магазин успешно обновлен
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Обновить магазин
      tags:
      - Магазины
swagger: "2.0"
